worker_processes  2;
worker_rlimit_nofile 8192;
user root root;

events {
  worker_connections  4096;
}

http {
   
   log_format timed_combined '$time_local|$proxy_host|$remote_addr|$status|$request_time|$upstream_status|$upstream_response_time|$upstream_addr|$http_x_forwarded_for|$request_length|$bytes_sent|$request_method|$scheme|$request_uri|$http_referer|END|$http_host|$http_user_agent';
   log_format request_body '$time_iso8601|$proxy_host|$remote_addr|$status|$request_time|$upstream_status|$upstream_response_time|$upstream_addr|$http_x_forwarded_for|$request_length|$bytes_sent|$request_method|$scheme|$request_uri|$http_referer|$hostname|$http_host|$http_user_agent|$request_body';
   access_log off;
  server_names_hash_bucket_size 256;
  include ../upstreams/upstreams.conf;


  more_set_headers  'X-Nginx-Host: $hostname';
  more_set_headers  'X-Nginx-Pool: $proxy_host';
  more_set_headers  'X-Nginx-UpstreamHost: $upstream_addr';
  more_set_headers  'X-Upstream-Server: $upstream_http_server';

  more_set_headers 'X-Request-Id: $request_id';
  proxy_set_header X-Request-Id "$request_id";

  
  include       mime.types;
  default_type  application/octet-stream;
  proxy_set_header X-Pool $proxy_host;
  proxy_set_header Host "other";
  server {
    listen 8080;
    listen  80;
    listen 9300;

    location / {
	client_max_body_size 1000m;
      if ($http_x_pool = ""){
          return 404;
      }
      if ($http_x_assert_pool = $http_x_pool) {
        return 200;
      }
      if ($http_x_assert_pool != $http_x_pool) {
        add_header X-Pool "$http_x_pool";
        return 204;
      }
    }
  }
  include ../subdomains/*.conf;
}
